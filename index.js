const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const dotenv = require('dotenv');
const nodemailer = require('nodemailer');
const SupportMessage = require('./models/SupportMessage');

dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

// üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Mongo
mongoose.connect(process.env.DATABASE_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
}).then(() => console.log('‚úÖ MongoDB connected'))
  .catch((err) => console.error('‚ùå MongoDB error:', err));

// ‚úâÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP Mailgun —á–µ—Ä–µ–∑ Nodemailer
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: process.env.SMTP_PORT,
  secure: process.env.SMTP_SECURE === 'true',
  auth: {
    user: process.env.SMTP_USERNAME,
    pass: process.env.SMTP_PASSWORD,
  },
});

// üö® –ü–æ–¥–¥–µ—Ä–∂–∫–∞: POST /support/message
app.post('/support/message', async (req, res) => {
  const { userEmail, message } = req.body;

  if (!userEmail || !message) {
    return res.status(400).json({ error: 'Missing email or message' });
  }

  try {
    // 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Mongo
    await SupportMessage.create({ userEmail, message });

    // 2. –®–ª—ë–º –ø–∏—Å—å–º–æ —Å–µ–±–µ
    const mailOptions = {
      from: `"LifePlane Support" <${process.env.EMAIL_FROM}>`,
      to: 'studio@listento.pro',
      subject: '–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É',
      text: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userEmail}\n\n–°–æ–æ–±—â–µ–Ω–∏–µ:\n${message}`,
    };

    await transporter.sendMail(mailOptions);

    res.status(200).json({ success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' });
  } catch (err) {
    console.error('Support error:', err);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
  }
});

// üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
app.get('/', (_, res) => res.send('üå± LifePlane backend is running'));

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`üöÄ Server running on port ${PORT}`);
});
