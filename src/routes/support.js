import express from 'express';
import mailgun from 'mailgun-js';
import SupportMessage from '../models/SupportMessage.js';

const router = express.Router();

// –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if (!process.env.MAILGUN_API_KEY || !process.env.MAILGUN_DOMAIN) {
  console.warn('‚ö†Ô∏è  MAILGUN_API_KEY –∏–ª–∏ MAILGUN_DOMAIN –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã. –ü–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç.');
}

const mg = mailgun({
  apiKey: process.env.MAILGUN_API_KEY || 'no-key',
  domain: process.env.MAILGUN_DOMAIN || 'no-domain',
});

router.post('/message', async (req, res) => {
  const { userEmail, message } = req.body;

  if (!userEmail || !message) {
    return res.status(400).json({ error: 'Missing email or message' });
  }

  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Mongo
    const saved = await SupportMessage.create({ userEmail, message });
    console.log('üíæ Support message saved:', saved);

    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ
    const data = {
      from: 'Life Plane Support <support@lifeplane.app>',
      to: 'studio@listento.pro',
      subject: '–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É',
      text: `Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userEmail}\n\n–°–æ–æ–±—â–µ–Ω–∏–µ:\n${message}`,
    };

    try {
      const result = await mg.messages().send(data);
      console.log('üìß Mailgun response:', result);
    } catch (mailErr) {
      console.error('‚ùå Mailgun error:', mailErr.message || mailErr);
    }

    res.status(200).json({ success: true, message: 'Support request processed' });
  } catch (err) {
    console.error('üî• Server crash in /support/message:', err.message || err);
    res.status(500).json({ error: 'Server error' });
  }
});

export default router;
